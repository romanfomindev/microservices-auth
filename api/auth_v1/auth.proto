syntax = "proto3";

package auth_v1;

import "google/api/annotations.proto";
import "validate/validate.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "https://github.com/romanfomindev/microservices-auth/pkg/auth_v1;auth_v1";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Auth API"
    version: "1.0.0"
    contact: {
      name: "Roman"
      email: "romanfomindev@gmail.com"
    };
  };

  host: "localhost:8080",
  schemes: HTTP,
  schemes: HTTPS,
  consumes: "application/json",
  produces: "application/json",
};

service AuthService {
    rpc Login(LoginRequest) returns (LoginResponse) {
        option (google.api.http) = {
            post: "/v1/auth/login"
            body: "*"
        };
    }
    rpc GetRefreshToken(GetRefreshTokenRequest) returns (GetRefreshTokenResponse) {
        option (google.api.http) = {
            post: "/v1/auth/refresh"
            body: "*"
        };
    }
    rpc GetAccessToken(GetAccessTokenRequest) returns (GetAccessTokenResponse) {
        option (google.api.http) = {
            post: "/v1/auth/access"
            body: "*"
        };
    }
}

message LoginRequest {
    string email = 1 [(validate.rules).string.email = true];
    string password = 2 [(validate.rules).string = {min_len: 1, max_len: 50}];
}

message LoginResponse {
    string refresh_token = 1;
}

message GetRefreshTokenRequest {
    string old_refresh_token = 1;
}

message GetRefreshTokenResponse {
    string refresh_token = 1;
}

message GetAccessTokenRequest {
    string refresh_token = 1;
}

message GetAccessTokenResponse {
    string access_token = 1;
}

